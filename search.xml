<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ChatGPT注册流程及初步体验</title>
      <link href="//4235365054.html"/>
      <url>//4235365054.html</url>
      
        <content type="html"><![CDATA[<h2 id="代理准备"><a href="#代理准备" class="headerlink" title="代理准备"></a>代理准备</h2><p>需要一个国外非香港的原生ip代理，比如日本、新加坡、美国之类的  </p><h2 id="国外手机号码"><a href="#国外手机号码" class="headerlink" title="国外手机号码"></a>国外手机号码</h2><p>GV号是注册不了的、+86更不用说，懂得都懂;建议找一个接码平台比如<a href="https://sms-activate.org/">sms</a></p><h3 id="购买手机号码"><a href="#购买手机号码" class="headerlink" title="购买手机号码"></a>购买手机号码</h3><ul><li>登录注册<br>谷歌邮箱或者其他非一次性邮箱注册登录即可<br><img src="/img/ChatGPT/1.png" alt="avatar">  </li><li>充值<br>登陆后在右上角充值，选择支付宝<br><img src="/img/ChatGPT/4.png" alt="avatar"><br><img src="/img/ChatGPT/5.png" alt="avatar"><br>我买的是德国的归属地27卢布，冲了0.42美元<br><img src="/img/ChatGPT/6.png" alt="avatar"><br>1美元是65卢布，看自己的需求充值即可  </li><li>购买选择号码归属地<br>在左侧搜索OpenAI<br><img src="/img/ChatGPT/2.png" alt="avatar"><br>选择印度、印度尼西亚、德国、巴西的即可,<del>比较便宜</del>;购买成功后，右侧出现你购买的电话号码</li></ul><h3 id="注册及登录ChatGPT"><a href="#注册及登录ChatGPT" class="headerlink" title="注册及登录ChatGPT"></a>注册及登录ChatGPT</h3><p>打开<a href="https://chat.openai.com/auth/login">注册网址</a>,选择注册<strong>Sign up</strong><br><img src="/img/ChatGPT/8.png" alt="avatar">  </p><ul><li>填写你的邮箱和密码注册,你的邮箱会收到一封确认信息的邮件，确认即可</li></ul><h4 id="填写并注册"><a href="#填写并注册" class="headerlink" title="填写并注册"></a>填写并注册</h4><p>代理不行可能会显示服务在你的国家不可用<br>选择你号码归属地的国家区号<br><img src="/img/ChatGPT/9.png" alt="avatar"><br>复制号码，去掉区号,填写号码,发送验证码，接收到验证码，填写即可注册成功<br><img src="/img/ChatGPT/10.png" alt="avatar">  </p><h3 id="体验"><a href="#体验" class="headerlink" title="体验"></a>体验</h3><p>感觉还不戳<br><img src="/img/ChatGPT/11.png" alt="avatar"><br><img src="/img/ChatGPT/12.png" alt="avatar">  </p><h3 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h3><p>Q:OpenAI服务在本地区不可用<br>A:更换代理，使用非香港的原生IP<br>Q:一直收不到验证码？<br>A:尝试换其他的手机号,或者换其他国家的手机号<br>Q:手机号购买只有20分钟有效期，到时间还没收到验证码怎么办？<br>A:不用担心，只要你没使用验证码，到20分钟钱会自动退到账户<br>(PS:早点注册成功可以早点退号码，还会退一部分钱</p>]]></content>
      
      
      <categories>
          
          <category> 科学上网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科学上网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些算法总结</title>
      <link href="//4206166846.html"/>
      <url>//4206166846.html</url>
      
        <content type="html"><![CDATA[<h2 id="01背包问题"><a href="#01背包问题" class="headerlink" title="01背包问题"></a>01背包问题</h2><p>有n件物品和一个最多能背重量为w 的背包。第i件物品的重量是weight[i]，得到的价值是value[i] 。<strong>每件物品只能用一次</strong>，求解将哪些物品装入背包里物品价值总和最大？  </p><h3 id="二维dp数组01背包"><a href="#二维dp数组01背包" class="headerlink" title="二维dp数组01背包"></a>二维dp数组01背包</h3><p>举一个栗子：<br>背包最大重量为4<br>物品为:</p><table><thead><tr><th></th><th>重量</th><th>价值</th></tr></thead><tbody><tr><td>物品0</td><td>1</td><td>15</td></tr><tr><td>物品1</td><td>3</td><td>20</td></tr><tr><td>物品2</td><td>4</td><td>30</td></tr></tbody></table><p>问背包能背的物品最大价值是多少？    </p><table><thead><tr><th>重量</th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th></tr></thead><tbody><tr><td>物品0</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>物品1</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>物品2</td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><h3 id="确定递推公式"><a href="#确定递推公式" class="headerlink" title="确定递推公式"></a>确定递推公式</h3><p>dp[i][j]的含义：从下标为[0-i]的物品里任意取，放进容量为j的背包，价值总和最大是多少。<br>那么可以有两个方向推出来dp[i][j]:  </p><ul><li>不放物品i：由dp[i - 1][j]推出，即背包容量为j，里面不放物品i的最大价值，此时dp[i][j]就是<br>dp[i - 1][j]。(其实就是当物品i的重量大于背包j的重量时，物品i无法放进背包中，所以被背包内的价值依然和前面相同。)</li><li>放物品i：由dp[i - 1][j - weight[i]]推出，dp[i - 1][j - weight[i]] 为背包容量为j - weight[i]的时候不放物品i的最大价值，那么dp[i - 1][j - weight[i]] + value[i] （物品i的价值），就是背包放物品i得到的最大价值</li><li>所以递归公式： dp[i][j] &#x3D; max(dp[i - 1][j], dp[i - 1][j - weight[i]] + value[i]);<br>首先从dp[i][j]的定义出发，如果背包容量j为0的话，即dp[i][0]，无论是选取哪些物品，背包价值总和一定为0。</li></ul><table><thead><tr><th>重量</th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th></tr></thead><tbody><tr><td>物品0</td><td>0</td><td></td><td></td><td></td><td></td></tr><tr><td>物品1</td><td>0</td><td></td><td></td><td></td><td></td></tr><tr><td>物品2</td><td>0</td><td></td><td></td><td></td><td></td></tr></tbody></table><p>在看其他情况。<br>状态转移方程 dp[i][j] &#x3D; max(dp[i - 1][j], dp[i - 1][j - weight[i]] + value[i]); 可以看出i 是由 i-1 推导出来，那么i为0的时候就一定要初始化。<br>dp[0][j]，即：i为0，存放编号0的物品的时候，各个容量的背包所能存放的最大价值。<br>那么很明显当 j &lt; weight[0]的时候，dp[0][j] 应该是 0，因为背包容量比编号0的物品重量还小。<br>当j &gt;&#x3D; weight[0]时，dp[0][j] 应该是value[0]，因为背包容量放足够放编号0物品。<br>代码初始化如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 初始化 dp</span></span><br><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">dp</span>(weight.<span class="built_in">size</span>(), <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(bagweight + <span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = weight[<span class="number">0</span>]; j &lt;= bagweight; j++) &#123;</span><br><span class="line">    dp[<span class="number">0</span>][j] = value[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么问题来了，先遍历 物品还是先遍历背包重量呢？<br>其实都可以！！ 但是先遍历物品更好理解。<br>那么给出先遍历物品  </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// weight数组的大小 就是物品个数</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt; weight.<span class="built_in">size</span>(); i++) &#123; <span class="comment">// 遍历物品</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt;= bagweight; j++) &#123; <span class="comment">// 遍历背包容量</span></span><br><span class="line">        <span class="keyword">if</span> (j &lt; weight[i]) dp[i][j] = dp[i - <span class="number">1</span>][j]; </span><br><span class="line">        <span class="keyword">else</span> dp[i][j] = <span class="built_in">max</span>(dp[i - <span class="number">1</span>][j], dp[i - <span class="number">1</span>][j - weight[i]] + value[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>dp[i][j]所需要的数据就是左上角，根本不影响dp[i][j]公式的推导<br>手动推导顺序:</p><table><thead><tr><th>重量</th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th></tr></thead><tbody><tr><td>物品0</td><td>0</td><td>15</td><td>15</td><td>15</td><td>15</td></tr><tr><td>物品1</td><td>0</td><td></td><td></td><td></td><td></td></tr><tr><td>物品2</td><td>0</td><td></td><td></td><td></td><td></td></tr></tbody></table><table><thead><tr><th>重量</th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th></tr></thead><tbody><tr><td>物品0</td><td>0</td><td>15</td><td>15</td><td>15</td><td>15</td></tr><tr><td>物品1</td><td>0</td><td>15</td><td>15</td><td>20</td><td>35</td></tr><tr><td>物品2</td><td>0</td><td></td><td></td><td></td><td></td></tr></tbody></table><table><thead><tr><th>重量</th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th></tr></thead><tbody><tr><td>物品0</td><td>0</td><td>15</td><td>15</td><td>15</td><td>15</td></tr><tr><td>物品1</td><td>0</td><td>15</td><td>15</td><td>20</td><td>35</td></tr><tr><td>物品2</td><td>0</td><td>15</td><td>15</td><td>20</td><td>35</td></tr></tbody></table><p>最终结果就是dp[2][4]。<br>建议大家此时自己在纸上推导一遍，看看dp数组里每一个数值是不是这样的。<br>做动态规划的题目，最好的过程就是自己在纸上举一个例子把对应的dp数组的数值推导一下，然后在动手写代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">DP</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; weight = &#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>&#125;;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; value = &#123;<span class="number">15</span>, <span class="number">20</span>, <span class="number">30</span>&#125;;</span><br><span class="line">    <span class="type">int</span> bagweight = <span class="number">4</span>;</span><br><span class="line">    <span class="comment">// 二维数组</span></span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">dp</span>(weight.<span class="built_in">size</span>(), <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(bagweight + <span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line">    <span class="comment">// 初始化</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = weight[<span class="number">0</span>]; j &lt;= bagweight; j++) &#123;</span><br><span class="line">        dp[<span class="number">0</span>][j] = value[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// weight数组的大小 就是物品个数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt; weight.<span class="built_in">size</span>(); i++) &#123; <span class="comment">// 遍历物品</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt;= bagweight; j++) &#123; <span class="comment">// 遍历背包容量</span></span><br><span class="line">            <span class="keyword">if</span> (j &lt; weight[i]) dp[i][j] = dp[i - <span class="number">1</span>][j];</span><br><span class="line">            <span class="keyword">else</span> dp[i][j] = <span class="built_in">max</span>(dp[i - <span class="number">1</span>][j], dp[i - <span class="number">1</span>][j - weight[i]] + value[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; dp[weight.<span class="built_in">size</span>() - <span class="number">1</span>][bagweight] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">DP</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python的一些打包技巧</title>
      <link href="//971401278.html"/>
      <url>//971401278.html</url>
      
        <content type="html"><![CDATA[<h2 id="Python的exe打包"><a href="#Python的exe打包" class="headerlink" title="Python的exe打包"></a>Python的exe打包</h2><h3 id="安装Pyinstaller"><a href="#安装Pyinstaller" class="headerlink" title="安装Pyinstaller"></a>安装Pyinstaller</h3><p>Python终端安装Pyinstaller</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install Pyinstaller</span><br></pre></td></tr></table></figure><h3 id="进行exe打包"><a href="#进行exe打包" class="headerlink" title="进行exe打包"></a>进行exe打包</h3><p>pushd到py文件的路径进行打包<br><img src="/img/Python%E7%9A%84exe%E6%89%93%E5%8C%85/1.png" alt="avatar"><br><img src="/img/Python%E7%9A%84exe%E6%89%93%E5%8C%85/2.png" alt="avatar"><br>生成可执行文件 -F (执行有窗口输入,比如input,stdin)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Pyinstaller -F xxx.py</span><br></pre></td></tr></table></figure><p>生成可执行文件 -F -w (执行无窗口输入)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Pyinstaller -F -w xxx.py</span><br></pre></td></tr></table></figure><p>生成可执行文件 -F -w -i (xxx.ico是替换你的程序图标)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Pyinstaller -F -w -i xxx.ico xxx.py</span><br></pre></td></tr></table></figure><p>打包成功后是这个样子<br><img src="/img/Python%E7%9A%84exe%E6%89%93%E5%8C%85/3.png" alt="avatar"><br>打包完后,源文件路径会出现一个dist文件夹,存放着打包好的exe文件以及一个spec文件<br><img src="/img/Python%E7%9A%84exe%E6%89%93%E5%8C%85/4.png" alt="avatar"><br>比如博主打包的是一个简单的英文单词查询脚本,打包后使用如图所示<br><img src="/img/Python%E7%9A%84exe%E6%89%93%E5%8C%85/5.png" alt="avatar"><br><img src="/img/Python%E7%9A%84exe%E6%89%93%E5%8C%85/6.png" alt="avatar"> </p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>力扣每日一题</title>
      <link href="//543989307.html"/>
      <url>//543989307.html</url>
      
        <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>因为疫情原因，博主早早就回家了，期末考试也延迟到下学期，实在是没事啥事情做了(无聊.jpg<br>然后目前在学习Python和C++，本文作为本蒟蒻的学习笔记，<del>大佬勿喷</del>(害怕.jpg</p><h2 id="2022年12月7日"><a href="#2022年12月7日" class="headerlink" title="2022年12月7日"></a>2022年12月7日</h2><ul><li><a href="https://leetcode.cn/problems/two-sum/">1.两数之和 </a></li></ul><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><p>给出一个字典作为哈希表，target对每个元素进行相减，如果相减的值在哈希表的索引中，返回这个对应的value<br>和此时被减数的索引；不在的话把被减数作为索引存入哈希表中，并赋值它对应的索引</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">twoSum</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>], target: <span class="built_in">int</span></span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span><br><span class="line">        hashtable = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> i, value <span class="keyword">in</span> <span class="built_in">enumerate</span>(nums):</span><br><span class="line">            <span class="keyword">if</span> target - value <span class="keyword">in</span> hashtable.keys():</span><br><span class="line">                <span class="keyword">return</span> [hashtable[target - value], i]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                hashtable[nums[i]] = i</span><br></pre></td></tr></table></figure><p><img src="/img/%E5%8A%9B%E6%89%A3/2022.12.7.png" alt="avatar">  </p><h2 id="2022年12月8日"><a href="#2022年12月8日" class="headerlink" title="2022年12月8日"></a>2022年12月8日</h2><ul><li><a href="https://leetcode.cn/problems/binary-search/">704. 二分查找</a></li></ul><h3 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h3><p>二分法,每次取中间与目标值对比;等于返回;小于目标值right&#x3D;mid-1;大与目标值left&#x3D;mid+1;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">search</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>], target: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        left=<span class="number">0</span></span><br><span class="line">        right=<span class="built_in">len</span>(nums)-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span>(left&lt;=right):</span><br><span class="line">            mid = <span class="built_in">int</span>(left + (right - left) / <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">if</span>(nums[mid]==target):</span><br><span class="line">                <span class="keyword">return</span> mid</span><br><span class="line">            <span class="keyword">elif</span> (nums[mid]&lt;target):</span><br><span class="line">                left=mid+<span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> (nums[mid]&gt;target):</span><br><span class="line">                right=mid-<span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span>-<span class="number">1</span></span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">search</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> target)</span> </span>&#123;</span><br><span class="line">       <span class="type">int</span> left = <span class="number">0</span>, right =nums.<span class="built_in">size</span>()- <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (left &lt;= right) &#123;</span><br><span class="line">        <span class="type">int</span> mid = left +(right-left) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (nums[mid] == target)</span><br><span class="line">            <span class="keyword">return</span> mid;</span><br><span class="line">        <span class="keyword">if</span> (target &lt; nums[mid])</span><br><span class="line">            right = mid - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (target &gt; nums[mid])</span><br><span class="line">            left = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><img src="/img/%E5%8A%9B%E6%89%A3/2022.12.8.png" alt="avatar">  </p><h2 id="2022年12月9日"><a href="#2022年12月9日" class="headerlink" title="2022年12月9日"></a>2022年12月9日</h2><ul><li><a href="https://leetcode.cn/problems/check-if-the-sentence-is-pangram/">1832. 判断句子是否为全字母句</a></li></ul><h3 id="解题思路-2"><a href="#解题思路-2" class="headerlink" title="解题思路"></a>解题思路</h3><p>思路一:遍历字符串，将每个字母存入set中，最后判断set长度是否为26即可<br>思路二:用一个整数 ans 记录出现过的字母，其中ans的第 i位表示第 i 个字母是否出现过<br>最后判断ans的二进制表示中是否有 26个1，也即判断ans是否等于 2^26 -1若是，返回 true，否则返回 false</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">checkIfPangram</span>(<span class="params">self, sentence: <span class="built_in">str</span></span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(<span class="built_in">set</span>(sentence))==<span class="number">26</span></span><br></pre></td></tr></table></figure><p>思路二  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">checkIfPangram</span>(<span class="params">self, sentence: <span class="built_in">str</span></span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">        ans=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> sentence:</span><br><span class="line">            ans|=<span class="number">1</span>&lt;&lt;(<span class="built_in">ord</span>(i)-<span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>))</span><br><span class="line">        <span class="keyword">return</span> ans==(<span class="number">1</span>&lt;&lt;<span class="number">26</span>)-<span class="number">1</span></span><br></pre></td></tr></table></figure><p><img src="/img/%E5%8A%9B%E6%89%A3/2022.12.9.png" alt="avatar">  </p><h2 id="2022年12月10日"><a href="#2022年12月10日" class="headerlink" title="2022年12月10日"></a>2022年12月10日</h2><ul><li><a href="https://leetcode.cn/problems/palindrome-number/">9.回文数</a></li></ul><h3 id="解题思路-3"><a href="#解题思路-3" class="headerlink" title="解题思路"></a>解题思路</h3><p>将数据改为字符串类型，进行字符串切片比较即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">isPalindrome</span>(<span class="params">self, x: <span class="built_in">int</span></span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">        s=<span class="built_in">str</span>(x)</span><br><span class="line">        <span class="keyword">return</span> s==s[::-<span class="number">1</span>]</span><br></pre></td></tr></table></figure><p><img src="/img/%E5%8A%9B%E6%89%A3/2022.12.10.png" alt="avatar">  </p><h2 id="2022年12月11日"><a href="#2022年12月11日" class="headerlink" title="2022年12月11日"></a>2022年12月11日</h2><ul><li><a href="https://leetcode.cn/problems/minimum-operations-to-make-the-array-increasing/">1827. 最少操作使数组递增</a></li></ul><h3 id="解题思路-4"><a href="#解题思路-4" class="headerlink" title="解题思路"></a>解题思路</h3><p>贪心思想,如果nums[i+1]小于等于nums[i],ans+&#x3D;nums[i]-nums[i+1]+1的步数<br>nums[i+1]&#x3D;nums[i]+1;循环返回即可  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">minOperations</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        ans=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(nums)-<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> nums[i+<span class="number">1</span>]&lt;=nums[i]:</span><br><span class="line">                ans=ans+nums[i]-nums[i+<span class="number">1</span>]+<span class="number">1</span></span><br><span class="line">                nums[i+<span class="number">1</span>]=nums[i]+<span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><p><img src="/img/%E5%8A%9B%E6%89%A3/2022.12.11.png" alt="avatar"> </p><h2 id="2022年12月12日"><a href="#2022年12月12日" class="headerlink" title="2022年12月12日"></a>2022年12月12日</h2><ul><li><a href="https://leetcode.cn/problems/sum-of-beauty-of-all-substrings/">1781. 所有子字符串美丽值之和</a></li></ul><h3 id="解题思路-5"><a href="#解题思路-5" class="headerlink" title="解题思路"></a>解题思路</h3><p>纯暴力，双循环即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">beautySum</span>(<span class="params">self, s: <span class="built_in">str</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        ans = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s)):</span><br><span class="line">            cnt = Counter()</span><br><span class="line">            mx = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i, <span class="built_in">len</span>(s)):</span><br><span class="line">                cnt[s[j]] += <span class="number">1</span></span><br><span class="line">                mx = <span class="built_in">max</span>(mx, cnt[s[j]])</span><br><span class="line">                ans += mx - <span class="built_in">min</span>(cnt.values())</span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><p><img src="/img/%E5%8A%9B%E6%89%A3/2022.12.12.png" alt="avatar">   </p><h2 id="2022年12月13日"><a href="#2022年12月13日" class="headerlink" title="2022年12月13日"></a>2022年12月13日</h2><ul><li><a href="https://leetcode.cn/problems/roman-to-integer/">13. 罗马数字转整数</a></li></ul><h3 id="解题思路-6"><a href="#解题思路-6" class="headerlink" title="解题思路"></a>解题思路</h3><p>字典存储，模拟即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">romanToInt</span>(<span class="params">self, s: <span class="built_in">str</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="built_in">dict</span>=&#123;<span class="string">&#x27;I&#x27;</span>:<span class="number">1</span>,<span class="string">&#x27;V&#x27;</span>:<span class="number">5</span>,<span class="string">&#x27;X&#x27;</span>:<span class="number">10</span>,<span class="string">&#x27;L&#x27;</span>:<span class="number">50</span>,<span class="string">&#x27;C&#x27;</span>:<span class="number">100</span>,<span class="string">&#x27;D&#x27;</span>:<span class="number">500</span>,<span class="string">&#x27;M&#x27;</span>:<span class="number">1000</span>&#125;</span><br><span class="line">        ans=<span class="number">0</span></span><br><span class="line">        n=<span class="built_in">len</span>(s)</span><br><span class="line">        <span class="keyword">for</span> i,ch <span class="keyword">in</span> <span class="built_in">enumerate</span>(s):</span><br><span class="line">            value=<span class="built_in">dict</span>[ch]</span><br><span class="line">            <span class="keyword">if</span> i&lt; n-<span class="number">1</span> <span class="keyword">and</span> value&lt;<span class="built_in">dict</span>[s[i+<span class="number">1</span>]]:</span><br><span class="line">                ans-=value</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                ans+=value</span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><p><img src="/img/%E5%8A%9B%E6%89%A3/2022.12.13.png" alt="avatar"></p><h2 id="2022年12月14日"><a href="#2022年12月14日" class="headerlink" title="2022年12月14日"></a>2022年12月14日</h2><ul><li><a href="https://leetcode.cn/problems/longest-substring-without-repeating-characters/">3. 无重复字符的最长子串</a></li></ul><h3 id="解题思路-7"><a href="#解题思路-7" class="headerlink" title="解题思路"></a>解题思路</h3><p>队列的思想比较好，从左边遍历，如果不在队列中就append到队尾，如果在就del队首元素，同时维护最大的长度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">lengthOfLongestSubstring</span>(<span class="params">self, s: <span class="built_in">str</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        mx = <span class="number">0</span></span><br><span class="line">        dq = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">            <span class="keyword">while</span> i <span class="keyword">in</span> dq:</span><br><span class="line">                <span class="keyword">del</span> dq[<span class="number">0</span>]</span><br><span class="line">            dq.append(i)</span><br><span class="line">            mx = <span class="built_in">max</span>(mx, <span class="built_in">len</span>(dq))</span><br><span class="line">        <span class="keyword">return</span> mx</span><br></pre></td></tr></table></figure><p><img src="/img/%E5%8A%9B%E6%89%A3/2022.12.14.png" alt="avatar">  </p><h2 id="2022年12月15日"><a href="#2022年12月15日" class="headerlink" title="2022年12月15日"></a>2022年12月15日</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><ul><li><a href="https://leetcode.cn/problems/sum-of-digits-of-string-after-convert/">1945. 字符串转化后的各位数字之和</a></li></ul><h4 id="解题思路-8"><a href="#解题思路-8" class="headerlink" title="解题思路"></a>解题思路</h4><p>纯模拟题，按照要求转换，取数字各位相加，若小于10，直接返回</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getLucky</span>(<span class="params">self, s: <span class="built_in">str</span>, k: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        temp = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">            temp += <span class="built_in">str</span>(<span class="built_in">ord</span>(i) - <span class="number">96</span>)</span><br><span class="line">        ans = <span class="number">0</span></span><br><span class="line">        num = <span class="built_in">int</span>(temp)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(k):</span><br><span class="line">            ans=<span class="number">0</span></span><br><span class="line">            <span class="keyword">if</span> num &lt; <span class="number">10</span>:</span><br><span class="line">                ans = num</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">while</span> num &gt; <span class="number">0</span>:</span><br><span class="line">                t = num % <span class="number">10</span></span><br><span class="line">                num = num // <span class="number">10</span></span><br><span class="line">                ans += t</span><br><span class="line">            num = ans</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><p>简洁代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getLucky</span>(<span class="params">self, s: <span class="built_in">str</span>, k: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        s = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">str</span>(<span class="built_in">ord</span>(ch) - <span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>) + <span class="number">1</span>) <span class="keyword">for</span> ch <span class="keyword">in</span> s)</span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(k):</span><br><span class="line">            t = <span class="built_in">sum</span>(<span class="built_in">int</span>(ch) <span class="keyword">for</span> ch <span class="keyword">in</span> s)</span><br><span class="line">            s = <span class="built_in">str</span>(t)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">int</span>(s)</span><br></pre></td></tr></table></figure><p><img src="/img/%E5%8A%9B%E6%89%A3/2022.12.15.png" alt="avatar"></p><h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><ul><li><a href="https://leetcode.cn/problems/find-nearest-point-that-has-the-same-x-or-y-coordinate/">1779. 找到最近的有相同 X 或 Y 坐标的点</a></li></ul><h4 id="解题思路-9"><a href="#解题思路-9" class="headerlink" title="解题思路"></a>解题思路</h4><p>模拟即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">nearestValidPoint</span>(<span class="params">self, x: <span class="built_in">int</span>, y: <span class="built_in">int</span>, points: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        ans,mi=-<span class="number">1</span>,inf</span><br><span class="line">        <span class="keyword">for</span> i ,(X,Y) <span class="keyword">in</span> <span class="built_in">enumerate</span>(points):</span><br><span class="line">            <span class="keyword">if</span> X==x <span class="keyword">or</span> Y==y:</span><br><span class="line">                d=<span class="built_in">abs</span>(x-X)+<span class="built_in">abs</span>(y-Y)</span><br><span class="line">                <span class="keyword">if</span> mi&gt;d:</span><br><span class="line">                    ans=i</span><br><span class="line">                    mi=d</span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><p><img src="/img/%E5%8A%9B%E6%89%A3/2022.12.15.2.png" alt="avatar"></p><h2 id="2022年12月16日"><a href="#2022年12月16日" class="headerlink" title="2022年12月16日"></a>2022年12月16日</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><ul><li><a href="https://leetcode.cn/problems/minimum-elements-to-add-to-form-a-given-sum/">1785. 构成特定和需要添加的最少元素</a></li></ul><h4 id="解题思路-10"><a href="#解题思路-10" class="headerlink" title="解题思路"></a>解题思路</h4><p>将给出的数组nums进行累加，与goat相减取绝对值，再整除limit；判断是否整除，是的话返回ans；否则返回ans+1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">minElements</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>], limit: <span class="built_in">int</span>, goal: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        s=<span class="built_in">sum</span>(i <span class="keyword">for</span> i <span class="keyword">in</span> nums)</span><br><span class="line">        ans=<span class="built_in">abs</span>(s-goal)//limit</span><br><span class="line">        <span class="keyword">return</span> ans <span class="keyword">if</span> <span class="built_in">abs</span>(s-goal)%limit==<span class="number">0</span> <span class="keyword">else</span> ans+<span class="number">1</span></span><br></pre></td></tr></table></figure><p><img src="/img/%E5%8A%9B%E6%89%A3/2022.12.16.png" alt="avatar"></p><h3 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h3><ul><li><a href="https://leetcode.cn/problems/first-bad-version/">278. 第一个错误的版本</a></li></ul><h4 id="解题思路-11"><a href="#解题思路-11" class="headerlink" title="解题思路"></a>解题思路</h4><p>二分查找，注意是向下取整即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">firstBadVersion</span>(<span class="params">self, n: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        left=<span class="number">1</span></span><br><span class="line">        right=n</span><br><span class="line">        ans=<span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span>(left&lt;=right):</span><br><span class="line">            mid=<span class="built_in">int</span>(left+(right-left+<span class="number">1</span>)/<span class="number">2</span>)</span><br><span class="line">            <span class="keyword">if</span>(isBadVersion(mid)==<span class="literal">False</span>):</span><br><span class="line">                left=mid+<span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span>(isBadVersion(mid)==<span class="literal">True</span>):</span><br><span class="line">                right=mid-<span class="number">1</span></span><br><span class="line">                ans=mid</span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><p><img src="/img/%E5%8A%9B%E6%89%A3/2022.12.16.2.png" alt="avatar"></p><h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><ul><li><a href="https://leetcode.cn/problems/search-insert-position/">35. 搜索插入位置</a></li></ul><h4 id="解题思路-12"><a href="#解题思路-12" class="headerlink" title="解题思路"></a>解题思路</h4><p>二分查找，注意没找到的边界条件即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">searchInsert</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>], target: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        left,right=<span class="number">0</span>,<span class="built_in">len</span>(nums)-<span class="number">1</span></span><br><span class="line">        ans=<span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> left&lt;=right:</span><br><span class="line">            mid=<span class="built_in">int</span>(left+(right-left)/<span class="number">2</span>)</span><br><span class="line">            <span class="keyword">if</span> nums[mid]==target:</span><br><span class="line">                <span class="keyword">return</span> mid</span><br><span class="line">            <span class="keyword">elif</span> nums[mid]&gt;target:</span><br><span class="line">                right=mid-<span class="number">1</span></span><br><span class="line">                ans=mid</span><br><span class="line">            <span class="keyword">else</span> :</span><br><span class="line">                left=mid+<span class="number">1</span></span><br><span class="line">                ans=left</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span> <span class="keyword">if</span> ans&lt;<span class="number">0</span> <span class="keyword">else</span> ans</span><br></pre></td></tr></table></figure><p><img src="/img/%E5%8A%9B%E6%89%A3/2022.12.16.3.png" alt="avatar"></p><h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><ul><li><a href="https://leetcode.cn/problems/squares-of-a-sorted-array/">977. 有序数组的平方</a></li></ul><h4 id="解题思路-13"><a href="#解题思路-13" class="headerlink" title="解题思路"></a>解题思路</h4><p>思路一:sorted排序返回平方列表即可，时间复杂度O(nlogn)<br>思路二:双指针，找到分界点0；负数平方都是递减、正数的平方都是递增；遍历两侧，小的先放进去列表，移动指针<br>进行类似归并排序的操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sortedSquares</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sorted</span>(i*i <span class="keyword">for</span> i <span class="keyword">in</span> nums )</span><br></pre></td></tr></table></figure><p><img src="/img/%E5%8A%9B%E6%89%A3/2022.12.16.3.png" alt="avatar"><br>思路二:    </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sortedSquares</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span><br><span class="line">        l = []</span><br><span class="line">        mid = -<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> i, num <span class="keyword">in</span> <span class="built_in">enumerate</span>(nums):</span><br><span class="line">            <span class="keyword">if</span> num &lt; <span class="number">0</span>:</span><br><span class="line">                mid = i</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        i, j = mid, mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &gt;= <span class="number">0</span> <span class="keyword">or</span> j &lt; <span class="built_in">len</span>(nums):</span><br><span class="line">            <span class="keyword">if</span> i &lt; <span class="number">0</span>:</span><br><span class="line">                l.append(nums[j] * nums[j])</span><br><span class="line">                j += <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> j == <span class="built_in">len</span>(nums):</span><br><span class="line">                l.append(nums[i] * nums[i])</span><br><span class="line">                i -= <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> nums[i] * nums[i] &lt; nums[j] * nums[j]:</span><br><span class="line">                l.append(nums[i] * nums[i])</span><br><span class="line">                i -= <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                l.append(nums[j] * nums[j])</span><br><span class="line">                j += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> l</span><br></pre></td></tr></table></figure><p><img src="/img/%E5%8A%9B%E6%89%A3/2022.12.16.4.png" alt="avatar">  </p><h2 id="2022年12月17日"><a href="#2022年12月17日" class="headerlink" title="2022年12月17日"></a>2022年12月17日</h2><h3 id="第一题-2"><a href="#第一题-2" class="headerlink" title="第一题"></a>第一题</h3><ul><li><a href="https://leetcode.cn/problems/form-array-by-concatenating-subarrays-of-another-array/">1764. 通过连接另一个数组的子数组得到一个数组</a></li></ul><h4 id="解题思路-14"><a href="#解题思路-14" class="headerlink" title="解题思路"></a>解题思路</h4><p>贪心思想，对每个子数组进行遍历，k作为nums下标，从0开始遍历，进行子数组长的切片，如果等于子数组，则k+&#x3D;子数组的长，否则k+&#x3D;1；边界条件是k+子数组长小于nums长<br>否则，return False;不然就return True</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">canChoose</span>(<span class="params">self, groups: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]], nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">        k=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> g <span class="keyword">in</span> groups:</span><br><span class="line">            <span class="keyword">while</span> k+<span class="built_in">len</span>(g)&lt;=<span class="built_in">len</span>(nums):</span><br><span class="line">                <span class="keyword">if</span> nums[k:k+<span class="built_in">len</span>(g)]==g:</span><br><span class="line">                    k+=<span class="built_in">len</span>(g)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                k+=<span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        </span><br></pre></td></tr></table></figure><p><img src="/img/%E5%8A%9B%E6%89%A3/2022.12.17.png" alt="avatar">  </p><h3 id="第二题-2"><a href="#第二题-2" class="headerlink" title="第二题"></a>第二题</h3><ul><li><a href="https://leetcode.cn/problems/integer-to-roman/">12. 整数转罗马数字</a></li></ul><h4 id="解题思路-15"><a href="#解题思路-15" class="headerlink" title="解题思路"></a>解题思路</h4><p>打表即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">intToRoman</span>(<span class="params">self, num: <span class="built_in">int</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">        roman=[]</span><br><span class="line">        l=[(<span class="number">1000</span>, <span class="string">&quot;M&quot;</span>),(<span class="number">900</span>, <span class="string">&quot;CM&quot;</span>),(<span class="number">500</span>, <span class="string">&quot;D&quot;</span>),(<span class="number">400</span>, <span class="string">&quot;CD&quot;</span>),(<span class="number">100</span>, <span class="string">&quot;C&quot;</span>),(<span class="number">90</span>, <span class="string">&quot;XC&quot;</span>),         (<span class="number">50</span>, <span class="string">&quot;L&quot;</span>),(<span class="number">40</span>, <span class="string">&quot;XL&quot;</span>),(<span class="number">10</span>, <span class="string">&quot;X&quot;</span>),(<span class="number">9</span>, <span class="string">&quot;IX&quot;</span>),(<span class="number">5</span>, <span class="string">&quot;V&quot;</span>),(<span class="number">4</span>, <span class="string">&quot;IV&quot;</span>),(<span class="number">1</span>, <span class="string">&quot;I&quot;</span>)]</span><br><span class="line">        <span class="keyword">for</span> value,ch <span class="keyword">in</span> l:</span><br><span class="line">            <span class="keyword">while</span> num&gt;=value:</span><br><span class="line">                num-=value</span><br><span class="line">                roman.append(ch)</span><br><span class="line">            <span class="keyword">if</span> num==<span class="number">0</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(roman)</span><br></pre></td></tr></table></figure><p><img src="/img/%E5%8A%9B%E6%89%A3/2022.12.17.2.png" alt="avatar">  </p><h3 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h3><ul><li><a href="https://leetcode.cn/problems/rotate-array/">189. 轮转数组</a></li></ul><h4 id="解题思路-16"><a href="#解题思路-16" class="headerlink" title="解题思路"></a>解题思路</h4><p>发现新数据的位置为 <strong>(i+k)%len(nums)</strong> 用新的数组存储数据，最后赋值给元素即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">rotate</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>], k: <span class="built_in">int</span></span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        l = <span class="built_in">len</span>(nums)</span><br><span class="line">        n = <span class="built_in">list</span>(<span class="built_in">range</span>(l))</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(l):</span><br><span class="line">            n[(i + k) % l] = nums[i]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(l):</span><br><span class="line">            nums[i] = n[i]</span><br></pre></td></tr></table></figure><p><img src="/img/%E5%8A%9B%E6%89%A3/2022.12.17.3.png" alt="avatar">  </p><h3 id="第四题-1"><a href="#第四题-1" class="headerlink" title="第四题"></a>第四题</h3><ul><li><a href="https://leetcode.cn/problems/median-of-two-sorted-arrays/">4. 寻找两个正序数组的中位数</a></li></ul><h4 id="解题思路-17"><a href="#解题思路-17" class="headerlink" title="解题思路"></a>解题思路</h4><p>要求时间复杂度O(log (m+n));没思路，学习题解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">findMedianSortedArrays</span>(<span class="params">self, nums1: <span class="type">List</span>[<span class="built_in">int</span>], nums2: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">float</span>:</span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">getKthElement</span>(<span class="params">k</span>):</span><br><span class="line">            i, j = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                <span class="keyword">if</span> i == m:</span><br><span class="line">                    <span class="keyword">return</span> nums2[j + k - <span class="number">1</span>]</span><br><span class="line">                <span class="keyword">if</span> j == n:</span><br><span class="line">                    <span class="keyword">return</span> nums1[i + k - <span class="number">1</span>]</span><br><span class="line">                <span class="keyword">if</span> k == <span class="number">1</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">min</span>(nums1[i], nums2[j])</span><br><span class="line">                newi = <span class="built_in">min</span>(i + k // <span class="number">2</span> - <span class="number">1</span>, m - <span class="number">1</span>)</span><br><span class="line">                newj = <span class="built_in">min</span>(j + k // <span class="number">2</span> - <span class="number">1</span>, n - <span class="number">1</span>)</span><br><span class="line">                pivot1, pivot2 = nums1[newi], nums2[newj]</span><br><span class="line">                <span class="keyword">if</span> pivot1 &lt;= pivot2:</span><br><span class="line">                    k -= newi - i + <span class="number">1</span></span><br><span class="line">                    i = newi + <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    k -= newj - j + <span class="number">1</span></span><br><span class="line">                    j = newj + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        m, n = <span class="built_in">len</span>(nums1), <span class="built_in">len</span>(nums2)</span><br><span class="line">        l = m + n</span><br><span class="line">        <span class="keyword">if</span> l % <span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> getKthElement((l + <span class="number">1</span>) // <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> (getKthElement(l // <span class="number">2</span>) + getKthElement(l // <span class="number">2</span> + <span class="number">1</span>)) / <span class="number">2</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/img/%E5%8A%9B%E6%89%A3/2022.12.17.4.png" alt="avatar">  </p><h2 id="2022年12月18日"><a href="#2022年12月18日" class="headerlink" title="2022年12月18日"></a>2022年12月18日</h2><ul><li><a href="https://leetcode.cn/problems/longest-common-prefix/">14. 最长公共前缀</a></li></ul><h3 id="解题思路-18"><a href="#解题思路-18" class="headerlink" title="解题思路"></a>解题思路</h3><p>依次比较两个字符串取他们相同的部分，再用相同的部分和后面的字符串比较，再取相同的部分，继续相同的工作；<br>若前缀为空就return字符串  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">longestCommonPrefix</span>(<span class="params">self, strs: <span class="type">List</span>[<span class="built_in">str</span>]</span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">        pre=strs[<span class="number">0</span>]</span><br><span class="line">        l=<span class="built_in">len</span>(strs)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,l):</span><br><span class="line">            pre=self.cmp(pre,strs[i])</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> pre:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">return</span> pre</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">cmp</span>(<span class="params">self,str1,str2</span>):</span><br><span class="line">        index=<span class="number">0</span></span><br><span class="line">        l_m=<span class="built_in">min</span>(<span class="built_in">len</span>(str1),<span class="built_in">len</span>(str2))</span><br><span class="line">        <span class="keyword">while</span> index&lt;l_m <span class="keyword">and</span> str1[index]==str2[index]:</span><br><span class="line">            index+=<span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> str1[:index]</span><br></pre></td></tr></table></figure><p><img src="/img/%E5%8A%9B%E6%89%A3/2022.12.18.png" alt="avatar">  </p><h2 id="2022年12月19日"><a href="#2022年12月19日" class="headerlink" title="2022年12月19日"></a>2022年12月19日</h2><ul><li><a href="https://leetcode.cn/problems/find-if-path-exists-in-graph/">1971. 寻找图中是否存在路径</a></li></ul><h3 id="解题思路-19"><a href="#解题思路-19" class="headerlink" title="解题思路"></a>解题思路</h3><p>我们先将 edges 转换成图 g，然后使用 DFS，判断是否存在从 source 到 destination 的路径<br>过程中，用数组 v 记录已经访问过的顶点，避免重复访问。<br>时间复杂度 O(n + m)O(n+m)，其中 nn 和 mm 分别是节点数和边数。  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">validPath</span>(<span class="params">self, n: <span class="built_in">int</span>, edges: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]], source: <span class="built_in">int</span>, destination: <span class="built_in">int</span></span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">dfs</span>(<span class="params">i</span>):</span><br><span class="line">            <span class="keyword">if</span> i == destination:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">            v.add(i)</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> g[i]:</span><br><span class="line">                <span class="keyword">if</span> j <span class="keyword">not</span> <span class="keyword">in</span> v <span class="keyword">and</span> dfs(j):</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        g = defaultdict(<span class="built_in">list</span>)</span><br><span class="line">        <span class="keyword">for</span> a, b <span class="keyword">in</span> edges:</span><br><span class="line">            g[a].append(b)</span><br><span class="line">            g[b].append(a)</span><br><span class="line">        v = <span class="built_in">set</span>()</span><br><span class="line">        <span class="keyword">return</span> dfs(source)</span><br></pre></td></tr></table></figure><p><img src="/img/%E5%8A%9B%E6%89%A3/2022.12.19.png" alt="avatar">  </p><h2 id="2022年12月20日"><a href="#2022年12月20日" class="headerlink" title="2022年12月20日"></a>2022年12月20日</h2><p>阳了，发高烧，摆了</p><h2 id="2022年12月21日"><a href="#2022年12月21日" class="headerlink" title="2022年12月21日"></a>2022年12月21日</h2><p>持续发高烧，寄！</p><h2 id="2022年12月22日"><a href="#2022年12月22日" class="headerlink" title="2022年12月22日"></a>2022年12月22日</h2><p>持续发高烧，寄！</p><h2 id="2022年12月23日"><a href="#2022年12月23日" class="headerlink" title="2022年12月23日"></a>2022年12月23日</h2><p>持续发高烧，寄！</p><h2 id="2022年12月24日"><a href="#2022年12月24日" class="headerlink" title="2022年12月24日"></a>2022年12月24日</h2><p>持续发高烧，寄！</p><h2 id="2022年12月25日"><a href="#2022年12月25日" class="headerlink" title="2022年12月25日"></a>2022年12月25日</h2><p>今天状态还可以，写一写</p><ul><li><a href="https://leetcode.cn/problems/building-boxes/">1739. 放置盒子</a></li></ul><h3 id="解题思路-20"><a href="#解题思路-20" class="headerlink" title="解题思路"></a>解题思路</h3><p>找规律，暴力循环即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">minimumBoxes</span>(<span class="params">self, n: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        m,a,ans=<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> m&lt;n:</span><br><span class="line">            a=a+<span class="number">1</span></span><br><span class="line">            ans+=a</span><br><span class="line">            m+=a*(a+<span class="number">1</span>)/<span class="number">2</span></span><br><span class="line">        <span class="keyword">while</span> m&gt;n:</span><br><span class="line">            ans=ans-<span class="number">1</span></span><br><span class="line">            m-=a</span><br><span class="line">            a=a-<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> m&lt;n:</span><br><span class="line">             ans=ans+<span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><p><img src="/img/%E5%8A%9B%E6%89%A3/2022.12.25.png" alt="avatar">  </p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用idm加速下载百度网盘及其他文件</title>
      <link href="//idm.html"/>
      <url>//idm.html</url>
      
        <content type="html"><![CDATA[<h2 id="为什么要使用idm下载百度网盘"><a href="#为什么要使用idm下载百度网盘" class="headerlink" title="为什么要使用idm下载百度网盘"></a>为什么要使用idm下载百度网盘</h2><p><del>百度网盘罪孽深重，不开会员，下载速度像一坨💩</del>;<br>作为大学牲，每学期实验多如牛毛，每门实验课都要求下载不同实验软件;<br>而很大一部分软件都是非常大的(像Matlab)，然后<del>贫穷的</del>大学生又买不起正版;<br>经常用的都是破解版，大部分破解版都是通过百度网盘分享的，它的下载速度(不开会员)<br>让人想<del>紫砂</del></p><h2 id="idm-简介"><a href="#idm-简介" class="headerlink" title="idm 简介"></a>idm 简介</h2><p>宇宙最强下载神器，可提高五倍下载速度<br>资料来源:<a href="https://zh.m.wikipedia.org/zh-sg/Internet_Download_Manager">点这</a></p><h2 id="下载idm"><a href="#下载idm" class="headerlink" title="下载idm"></a>下载idm</h2><p>1.点击<a href="https://wwu.lanzouv.com/iR4YI0gv8xsh">这里</a>下载idm安装包及<font color="red"> 注册机 </font>(注册机在rar压缩包内)<br>2.下载完成后解压，运行<font color="red"> idman641build3.exe </font><br><img src="/img/idm/1.png" alt="avatar">  </p><h3 id="激活idm"><a href="#激活idm" class="headerlink" title="激活idm"></a>激活idm</h3><p><font color="red">关闭杀毒软件</font>，补丁是无毒的，但是杀毒软件会删除破解补丁<br>一路安装即可，安装完软件，<font color="red">不要启动！！！</font><br>解压<font color="red">IDM_6.4x_v18.1.rar</font>到idm安装目录<br>右键以管理员身份运行<font color="red">IDM_6.4x_Crack_v18.1.exe</font> ,执行<br>弹窗出来点击<font color="red">crack</font>，等它执行完会提示done！<br>此时，idm破解完成<br><img src="/img/idm/2.png" alt="avatar"><br>打开idm看注册情况，显示已注册则证明破解成功，破解完成后;<br><img src="/img/idm/3.png" alt="avatar">  </p><h4 id="配置idm用户代理设置"><a href="#配置idm用户代理设置" class="headerlink" title="配置idm用户代理设置"></a>配置idm用户代理设置</h4><p>点击idm的选项–<strong>常规</strong>按图片配置<br><strong>保存</strong>地址可自行选择<br><img src="/img/idm/14.png" alt="avatar"><img src="/img/idm/16.png" alt="avatar"><br><img src="/img/idm/15.png" alt="avatar"><br><strong>下载项</strong>用户代理(UA)修改成<strong>netdisk;PC</strong><br><img src="/img/idm/17.png" alt="avatar"><br><strong>保存至</strong>可自行修改保存地址<br><strong>连接</strong>改为<strong>4</strong><br><img src="/img/idm/18.png" alt="avatar"><br>改完确认即可<br>切记不要升级更新idm!!!<br>切记不要升级更新idm!!!<br>切记不要升级更新idm!!!</p><h3 id="配置油猴脚本"><a href="#配置油猴脚本" class="headerlink" title="配置油猴脚本"></a>配置油猴脚本</h3><p>打开浏览器(Google、Edge)都可以，<del>我习惯用Google了，就用Google来演示了</del><br>在右上角点击<font color="red">拓展程序</font>–<font color="red">管理拓展程序</font><br>点击左上角<font color="red">三</font>，再点击<font color="red">打开Chrome应用商店</font><br><img src="/img/idm/4.png" alt="avatar">    <img src="/img/idm/5.png" alt="avatar"><br><img src="/img/idm/6.png" alt="avatar"><br>搜索<font color="red">Tampermonkey</font>点击<font color="red">添加到Chrome即可</font><br><img src="/img/idm/7.png" alt="avatar"><img src="/img/idm/8.png" alt="avatar"><br>添加完成后，点击右上角<font color="red">拓展程序</font>，再点击Tampermonkey，如果没启用点击启用即可<br><img src="/img/idm/9.png" alt="avatar"><img src="/img/idm/10.png" alt="avatar"><br>启用完成后，点击<a href="https://greasyfork.org/zh-CN">这里</a>搜索脚本<br>搜索<strong>软件小妹</strong>，安装<strong>百度网盘简易下载助手（直链下载复活版）</strong><br><img src="/img/idm/11.png" alt="avatar"><img src="/img/idm/12.png" alt="avatar"><br><img src="/img/idm/13.png" alt="avatar"><br>到此你已经完成所有配置了</p><h3 id="下载百度网盘文件"><a href="#下载百度网盘文件" class="headerlink" title="下载百度网盘文件"></a>下载百度网盘文件</h3><p>打开<a href="https://pan.baidu.com/">百度网盘网页版</a>,登陆账号，保存你要下载的百度网盘文件到你的网盘<br>进入你的网盘文件，选择你要下载的文件，点击<strong>简易下载助手</strong>–<strong>点击获取直链地址</strong><br>可能需要关注公众号之类的，弄完获取到<strong>直链</strong><br><img src="/img/idm/19.png" alt="avatar"><br>复制<strong>直链链接</strong>到idm；点左上角的<strong>新建任务</strong>，填入你刚刚复制的链接<br>确认即可下载<br>以电磁波软件下载为例它的<a href="http://allall02.baidupcs.com/file/351b75285sa0f8f42219deb5de34666d?bkt=en-cf7b18a7c51d9078a703151a1f8c8399c1faaa8ba43d229bcf5aaa4bec1cb085510a58d446aa7a2d&fid=1463854661-250528-656561059544767&time=1669375690&sign=FDTAXUbGERQlBHSKfWaqi-DCb740ccc5511e5e8fedcff06b081203-g4XFvtvKw5HPxQR+QWflwiPtIcc=&to=19&size=936078546&sta_dx=936078546&sta_cs=6&sta_ft=zip&sta_ct=5&sta_mt=0&fm2=MH,Yangquan,Anywhere,,%E5%B9%BF%E4%B8%9C,ct&ctime=1661229031&mtime=1669375689&resv0=-1&resv1=0&resv2=rlim&resv3=5&resv4=936078546&vuk=1463854661&iv=2&htype=&randtype=&tkbind_id=0&esl=1&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-dbf761a04a9486991d87dc0c0c282cc5b668dd16df361da1b2c6106d7a1dc5834343610e0d96789b&expires=8h&rt=pr&r=750404714&vbdid=-&fin=x64_lite.zip&bflag=217,19-19&err_ver=1.0&check_blue=1&rtype=1&devuid=BDIMXV2-O_CEC11A46457949F6B255531E7107909A-C_0-D_0-M_525400A3696C-V_0E564ACA&clienttype=8&channel=00000000000000000000000000000000&dp-logid=8778982196166699853&dp-callid=0.1&tsl=0&csl=0&fsl=-1&csign=pCu2THjNPbf/jaVVjH4EypEdR/w=&so=1&ut=1&uter=1&serv=0&uc=1833802818&ti=05df9239daa40647e1fcf58ebcfdb2128289afed3764b363&hflag=30&from_type=3&adg=c_ad481a4b0284a2c873654e8d1dcddb46&reqlabel=250528_l_c46f8690ae504f19dbf0fd64a218def3_-1_e7ca347ebb08fbf768aa9f5ae7c6f0fa&ibp=1&by=themis">直链</a>添加下载得速度如图<br><img src="/img/idm/20.png" alt="avatar"><br>下载油管视频速度也可以<br><img src="/img/idm/21.png" alt="avatar">  </p><h4 id="Enjoy-it-！！！"><a href="#Enjoy-it-！！！" class="headerlink" title="Enjoy it ！！！"></a>Enjoy it ！！！</h4>]]></content>
      
      
      <categories>
          
          <category> network </category>
          
      </categories>
      
      
        <tags>
            
            <tag> idm </tag>
            
            <tag> network </tag>
            
            <tag> 百度网盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>湖南大学校园网ipv6免流</title>
      <link href="//ipv6.html"/>
      <url>//ipv6.html</url>
      
        <content type="html"><![CDATA[<h2 id="拥有一台拥有IPv6的VPS"><a href="#拥有一台拥有IPv6的VPS" class="headerlink" title="拥有一台拥有IPv6的VPS"></a>拥有一台拥有IPv6的VPS</h2><p>1.博主是在<a href="https://cloud.digitalocean.com/">Digitalocean</a>购买的VPS，一月6🔪，可以使用Github注册，一般来说，注册会送100刀，有效时间是3个月；也可以使用学校的邮箱参加GitHub的学生认证，它们的联动有100🔪的免费额度，这个没有限时<br><img src="/img/ipv6/1.png" alt="avatar"><br>2.注册完成后，进入页面，点击左边的<font color="red"> New Project</font>创建你的第一个工程<img src="/img/ipv6/2.png" alt="avatar"><br>3.创建好工程后，在你的工程里面，点击右上角的<font color="red"> create</font>，并选择<br><font color="red"> Droplets</font><img src="/img/ipv6/3.png" alt="avatar"><br>4.选择CentOS 8 Stream x64—Basic—6🔪—Singapore;<br><img src="/img/ipv6/4.png" alt="avatar"><img src="/img/ipv6/5.png" alt="avatar"><br>5.加密方式使用SSH keys加密（避免自己设置的密码被跑字典给破解）<br>SSH keys按照提示添加并选择即可<br><img src="/img/ipv6/6.png" alt="avatar"><br>6.给你的VPS选择IPv6（非常重要！！！）<br><img src="/img/ipv6/7.png" alt="avatar"><br>后面的选择你刚刚创建的工程，点击Create droplet;等待创建完成即可<br><img src="/img/ipv6/8.png" alt="avatar"><br>创建完成后可以看见VPS有ipv4和ipv6的地址</p><h2 id="打开虚拟机并安装相关依赖"><a href="#打开虚拟机并安装相关依赖" class="headerlink" title="打开虚拟机并安装相关依赖"></a>打开虚拟机并安装相关依赖</h2><p>点击刚刚创建的虚拟机，选择<font color="red">Access</font>点击<font color="red">Launch Droplet Console </font>打开窗口连接你的VPS<br><img src="/img/ipv6/9.png" alt="avatar"></p><h3 id="更新及安装组件"><a href="#更新及安装组件" class="headerlink" title="更新及安装组件"></a>更新及安装组件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum update -y</span><br><span class="line">yum install -y curl</span><br><span class="line">yum install -y socat</span><br></pre></td></tr></table></figure><p>等待安装完成(可能需要较长时间，毕竟创建的VPS是最便宜的)<br>出现此图即可<img src="/img/ipv6/10.png" alt="avatar"></p><h2 id="安装-X-ui-面板"><a href="#安装-X-ui-面板" class="headerlink" title="安装 X-ui 面板"></a>安装 X-ui 面板</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -Ls https://raw.githubusercontent.com/vaxilu/x-ui/master/install.sh)</span><br></pre></td></tr></table></figure><p>安装过程中需要设置面板账户，密码（建议设置得复杂点），和端口号（54321），设置完后输入y确认；<font color="red"> 记住你的密码和端口号</font>（后面会用到！）<br>如图所示<img src="/img/ipv6/11.png" alt="avatar"></p><h2 id="开放端口和开启BBR加速"><a href="#开放端口和开启BBR加速" class="headerlink" title="开放端口和开启BBR加速"></a>开放端口和开启BBR加速</h2><h3 id="安装并开启防火墙"><a href="#安装并开启防火墙" class="headerlink" title="安装并开启防火墙"></a>安装并开启防火墙</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum install firewalld</span><br><span class="line">systemctl start firewalld</span><br><span class="line">systemctl <span class="built_in">enable</span> firewalld</span><br><span class="line">systemctl status firewalld</span><br></pre></td></tr></table></figure><p>出现下图即可<img src="/img/ipv6/12.png" alt="avatar"></p><h3 id="开放端口"><a href="#开放端口" class="headerlink" title="开放端口"></a>开放端口</h3><p>输入下面的命令放行54321和12345端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --add-port=54321/tcp --add-port=12345/tcp </span><br><span class="line">firewall-cmd --permanent --list-ports <span class="comment">#查看防火墙的开放的端口</span></span><br><span class="line">firewall-cmd --reload <span class="comment">#重启防火墙(修改配置后要重启防火墙)</span></span><br></pre></td></tr></table></figure><p>出现下图即可<img src="/img/ipv6/13.png" alt="avatar"></p><h3 id="开启BBR加速"><a href="#开启BBR加速" class="headerlink" title="开启BBR加速"></a>开启BBR加速</h3><h3 id="什么是BBR？"><a href="#什么是BBR？" class="headerlink" title="什么是BBR？"></a>什么是BBR？</h3><p>什么是BBR？<br>BBR(Bottleneck Bandwidth and Round-trip propagation time)是谷歌开发的一种加速网络传输协议TCP的新算法，这种算法通过优化传输速度，避免路由堵塞现象的产生。BBR利用瓶颈带宽和往返传播时间，被认为是迄今为止跨越不同路由发送数据的最快方法，当数据路由拥挤时，能够更有效地处理流量。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;net.core.default_qdisc=fq&quot;</span> &gt;&gt; /etc/sysctl.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;net.ipv4.tcp_congestion_control=bbr&quot;</span> &gt;&gt; /etc/sysctl.conf</span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><p>出现下图证明开启成功<img src="/img/ipv6/14.png" alt="avatar"><br>可以输入下面命令检查BBR是否开启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sysctl -n net.ipv4.tcp_congestion_control</span><br><span class="line">lsmod | grep bbr</span><br></pre></td></tr></table></figure><p>出现此图即可<img src="/img/ipv6/15.png" alt="avatar"></p><h2 id="下载V2rayN"><a href="#下载V2rayN" class="headerlink" title="下载V2rayN"></a>下载V2rayN</h2><p>点击<a href="https://github.com/2dust/v2rayN">这里</a> 下载<br>按照教程下载即可</p><h2 id="配置X-ui面板"><a href="#配置X-ui面板" class="headerlink" title="配置X-ui面板"></a>配置X-ui面板</h2><p>浏览器上方输入你的VPS的ipv4地址加你刚刚修改的端口号（比如博主刚刚使用的是54321）<br>回车，输入你自己刚刚修改的账号密码，登录进入面板，可修改密码在面板里面<br><img src="/img/ipv6/16.png" alt="avatar"></p><h3 id="生成ipv6节点"><a href="#生成ipv6节点" class="headerlink" title="生成ipv6节点"></a>生成ipv6节点</h3><p>点击<font color="red">入站列表</font>，点<font color="red">+</font>号；备注随便、<font color="red">端口12345</font>（一定是你开放过的防火墙端口）、传输选择<font color="red">ws</font>，点击添加<br><img src="/img/ipv6/17.png" alt="avatar"><img src="/img/ipv6/18.png" alt="avatar"><br>点击操作，出现二维码，可使用V2扫码添加或者复制到剪贴板，从剪贴板导入节点</p><h2 id="使用节点享受ipv6免流"><a href="#使用节点享受ipv6免流" class="headerlink" title="使用节点享受ipv6免流"></a>使用节点享受ipv6免流</h2><p>打开V2rayN<br>将你的VPS的ipv6地址填写到节点的address那一栏，替换原来的ipv4地址<br>选择全局代理<br><img src="/img/ipv6/19.png" alt="avatar"><br><img src="/img/ipv6/20.png" alt="avatar"><br>恭喜！到现在你已经完成所有配置！！！<br>Steam&amp;&amp;Epic游戏下载以及一些网站直播都可免流，可以看到任务管理器的后台流量大部分集中在V2rayN身上<br>不过还是会有一些流量侧漏，可以考虑使用<a href="https://www.proxifier.com/">proxifeier</a>更全面代理全局流量，减少流量侧漏.<br>好的，现在就享受校园网免流吧！<br>enjoy it！！！</p>]]></content>
      
      
      <categories>
          
          <category> network </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> network </tag>
            
            <tag> 校园网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo快速入门及部署到Github</title>
      <link href="//Hexo.html"/>
      <url>//Hexo.html</url>
      
        <content type="html"><![CDATA[<h2 id="Hexo-简介"><a href="#Hexo-简介" class="headerlink" title="Hexo 简介"></a>Hexo 简介</h2><p>快速、简洁且高效的博客框架</p><h3 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h3><p>适用于windows系统<br>(开始前请自行安装好Git、Nodejs并配置好环境变量)</p><p><a href="https://blog.csdn.net/mukes/article/details/115693833">Git安装教程</a></p><p><a href="https://nodejs.org/en/download/">Nodejs安装链接</a> (选择适合自己的版本)</p><p><a href="https://blog.csdn.net/yaorongke/article/details/119084295">Nodejs环境变量配置教程</a></p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>1.在cmd黑窗口输入以下命令安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org //换源,避免下载太慢,有魔法可不使用</span><br><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>2.安装完成后输入<strong>hexo -v</strong>验证是否成功(有版本信息证明安装成功)</p><h3 id="初始化Hexo项目并运行"><a href="#初始化Hexo项目并运行" class="headerlink" title="初始化Hexo项目并运行"></a>初始化Hexo项目并运行</h3><p>1.在你想存放博客的路径如(D:\Hexo-Blog) 打开<font color="red"> cmd </font>黑窗口，输入<font color="red"> hexo init blog </font>初始化(blog是自定义名称，可自行更改)<br>2.进入 <font color="red"> blog </font> ，输入<font color="red"> npm i </font> 安装相关依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog //进入blog文件夹</span><br><span class="line">npm i</span><br></pre></td></tr></table></figure><p>3.在<font color="red"> cmd </font>黑窗口输入<font color="red">  hexo server</font> 或者 <font color="red"> hexo s </font> 启动项目<br>4.在浏览器输入<a href="http://localhost:4000/">http://localhost:4000/</a> 回车,即可以看到本地生成的静态博客了<br>5.若觉得主题不好看,可自行去<a href="https://hexo.io/themes/">Hexo</a>选择喜欢的主题并下载到blog&#x2F;node_modules&#x2F;(你刚下载的主题),在bolg&#x2F;_config.yml更改theme值</p><h2 id="Github注册仓库及连接"><a href="#Github注册仓库及连接" class="headerlink" title="Github注册仓库及连接"></a>Github注册仓库及连接</h2><h3 id="Github注册仓库和配置邮箱"><a href="#Github注册仓库和配置邮箱" class="headerlink" title="Github注册仓库和配置邮箱"></a>Github注册仓库和配置邮箱</h3><p>1.<a href="https://github.com/">进入官网</a><br>2.点击右上角的 Sign up (注册)<br>3.点击右上角的 + 按钮，选择 New repository，创建一个 &lt;用户名&gt;.github.io 的仓库（用户名是你的Github的名字，因为我创建过了，会报重复)<br><img src="/img/github/1.png" alt="avatar"><br><img src="/img/github/2.png" alt="avatar"><br>4.配置你的用户名和邮箱</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;你的用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;你的邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>5.通过 <font color="red"> git config -l </font>检查是否配置成功<br><img src="/img/github/3.png" alt="avatar"></p><h3 id="连接至-Github"><a href="#连接至-Github" class="headerlink" title="连接至 Github"></a>连接至 Github</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>回车即可，在C:\Users\用户名.ssh看见id_rsa.pub文件，记事本打开，复制全部内容(SSH KEY）</p><h4 id="1-将-SSH-KEY-配置到-GitHub"><a href="#1-将-SSH-KEY-配置到-GitHub" class="headerlink" title="1.将 SSH KEY 配置到 GitHub"></a>1.将 SSH KEY 配置到 GitHub</h4><p>进入 github，点击右上角头像 选择 settings，进入设置页后选择 SSH and GPG keys，名字随便起，公钥填到 Key 那一栏<br><img src="/img/github/4.png" alt="avatar"><br><img src="/img/github/5.png" alt="avatar"></p><h4 id="2-连接Github"><a href="#2-连接Github" class="headerlink" title="2.连接Github"></a>2.连接Github</h4><p>1.打开blog&#x2F;_cinfig.yml ,编辑你的deploy<br><img src="/img/github/6.png" alt="avatar"><br>把Ray-CL&#x2F;Ray-CL.github.io修改成自己的仓库名即可<br>2.测试连接，输入以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>出现这样的信息即可<br><img src="/img/github/7.png" alt="avatar">  </p><h3 id="将代码部署到-GitHub（Hexo-三连）"><a href="#将代码部署到-GitHub（Hexo-三连）" class="headerlink" title="将代码部署到 GitHub（Hexo 三连）"></a>将代码部署到 GitHub（Hexo 三连）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure><p>部署成功，打开<a href="https://ray-cl.github.io/">https://ray-cl.github.io/</a> 就可以看到你的博客了（这是博主的，你的打开你自己仓库即可）</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试博客</title>
      <link href="//Test.html"/>
      <url>//Test.html</url>
      
        <content type="html"><![CDATA[<h1 id="这是一篇测试博客"><a href="#这是一篇测试博客" class="headerlink" title="这是一篇测试博客"></a>这是一篇测试博客</h1><p><img src="/img/%E6%B5%8B%E8%AF%95/1.png" alt="avatar"></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
